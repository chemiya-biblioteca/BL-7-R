boxplot(airquality$Wind, main = "Average wind speed at La Guardia Airport",
xlab = "Miles per hour", ylab = "Wind",
col = "orange", border = "brown",
horizontal = F, notch = F)
boxplot(mpg ~ cyl, data = mtcars,
xlab = "Number of Cylinders",
ylab = "Miles Per Gallon",
main = "Mileage Data")
plot(airquality$Solar.R, airquality$Temp,
main ="Scatterplot Example",
xlab ="Ozone Concentration in parts per billion",
ylab =" Month of observation ", pch = 19)
plot(iris$Petal.Length, iris$Petal.Width,
col = "#cc0000",  # Hex code for datalab.cc red
pch = 19,         # Use solid circles for points
main = "Iris: Petal Length vs. Petal Width",
xlab = "Petal Length",
ylab = "Petal Width")
v <- c(17, 25, 38, 13, 41)
t <- c(22, 19, 36, 19, 23)
m <- c(25, 14, 16, 34, 29)
plot(v, type = "o", col = "red",
xlab = "Month", ylab = "Article Written ",
main = "Article Written chart")
lines(t, type = "o", col = "blue")
lines(m, type = "o", col = "green")
arbol1<-subset(Orange,Tree==1)
arbol1
plot(arbol1$age, arbol1$circumference, type = "l", lwd = 2, main = "lty = 1")
colors = c("green", "orange", "brown")
months <- c("Mar", "Apr", "May", "Jun", "Jul")
regions <- c("East", "West", "North")
Values <- matrix(c(2, 9, 3, 11, 9, 4, 8, 7, 3, 12, 5, 2, 8, 10, 11),
nrow = 3, ncol = 5, byrow = TRUE)
barplot(Values, main = "Total Revenue", names.arg = months,
xlab = "Month", ylab = "Revenue",
col = colors, beside = TRUE)
legend("topleft", regions, cex = 0.7, fill = colors)
install.packages("scatterplot3d")
library(scatterplot3d)
attach(mtcars)
scatterplot3d(mpg, cyl, hp,
main = "3D Scatterplot")
library(lattice)
png("DensityPlotLattice.png")
densityplot(~hp, main ="Density plot of HP", xlab ="HP")
dev.off()
hp<-mtcars$hp
png("DensityPlotLattice.png")
densityplot(~hp, main ="Density plot of HP", xlab ="HP")
dev.off()
data(ToothGrowth)
len<-ToothGrowth$len
png("HistogramLattice.png")
histogram(~len, data = ToothGrowth,
main = "Histogram of Length")
dev.off()
library(shiny)
ui <- fluidPage(
sliderInput(inputId = "num",
label = "Choose a number",
value = 10, min = 1, max = 1000),
plotOutput("hist")
)
server <- function(input, output)
{
output$hist <- renderPlot({
hist(rnorm(input$num))
})
}
shinyApp(ui = ui, server = server)
library(tidyr)
df <- data.frame(S.No = c(1:10),
Name = c('John', 'Smith',
'Peter', 'Luke',
'King', rep(NA, 5)))
df
df %>% replace_na(list(Name = 'Henry'))
library(data.table)
x <- data.table(A = letters[1:5], X = 1:5, Y = 6:10)
print(x)
z<-as.matrix(x)
print(z)
a <- list(name="Adam", Roll_No=15)
class(a) <- "Student"
a
print.Student <- function(obj){
cat("name: " ,obj$name, "\n")
cat("Roll No: ", obj$Roll_No, "\n")
}
print(a)
attr(a, "age")<-c(18)
attributes(a)
setClass("Student", slots=list(name="character",
Roll_No="numeric"))
a <- new("Student", name="Adam", Roll_No=20)
a
setMethod("show", "Student",
function(obj){
cat(obj@name, "\n")
cat(obj@Roll_No, "\n")
}
)
setClass("InternationalStudent",
slots=list(country="character"),
contains="Student"
)
s <- new("InternationalStudent", name="Adam",
Roll_No=15, country="India")
show(s)
movieList <- list(name = "Iron man", leadActor = "Robert Downey Jr")
class(movieList) <- "movie"
movieList
print.movie <- function(obj)
{
cat("The name of the movie is", obj$name,".\n")
cat(obj$leadActor, "is the lead actor.\n")
}
tryCatch(
expr = {
1 + 1
print("Everything was fine.")
},
error = function(e){
print("There was an error message.")
},
warning = function(w){
print("There was a warning message.")
},
finally = {
print("finally Executed")
}
)
install.packages("caret")
library(caret)
Data <- read.csv("GenderClassification.csv",
stringsAsFactors = TRUE)
Data <- read.csv("GenderClassification.csv",
stringsAsFactors = TRUE)
install.packages("caret")
install.packages("caret")
library(caret)
Data <- read.csv("GenderClassification.csv",
stringsAsFactors = TRUE)
